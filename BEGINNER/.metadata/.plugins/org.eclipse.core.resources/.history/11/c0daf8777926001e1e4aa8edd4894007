package beginLists;

public class LinkedList{
	private class Node{
		private int value;
		private Node next;
		public Node(int value) {
			this.value = value;
		}
	}
	private Node first;
	private Node last;
	
	public void addLast(int item) {
		var node = new Node(item);
		
		if(first==null) {
			first=last=node;
		}
		else {
			last.next = node;
			last =node;
		}
	}
	
	public void addFirst(int item) {
		var node = new Node(item);
		
		if(first==null) {
			first=last=node;
		}
		else {
			node.next=first;
			first=node;
		}
	}
	public void deleteLast() {
		if(first==null) {
			throw new IllegalArgumentException();
		}
		Node i=first;
		while(i.next.next!=null) {
			i=i.next;
		}
		last=i;
		
	}
	public void deleteFirst() {
		if(first==null) {
			throw new IllegalArgumentException();
		}
		Node i =first;
		first = i.next;
	}
	
	public boolean contains(int item) {
		for(Node i=first; i!=last.next;i=i.next) {
			if(i.value == item) {
				return true;
			}
		}
		return false;
	}
	
	
	//addFirst
	//addLast
	//deleteFirst
	//deleteLast
	//contains
	//indexOf
	public void print() {
		Node i=first;
		do {
			System.out.print(i.value+"->");
			i=i.next;
		}while(i!=last.next );//coz last node next points to null, and i node reaches till last node
		
		
		System.out.print("\n");
	}
}